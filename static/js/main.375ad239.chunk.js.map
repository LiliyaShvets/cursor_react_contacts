{"version":3,"sources":["components/Contacts.jsx","App.jsx","index.js"],"names":["contacts","firstName","lastName","phone","gender","Contacts","useState","items","setItems","type","onChange","event","filteredContacts","filter","contact","toLowerCase","indexOf","target","value","console","log","placeholder","className","filteredMaleContacts","id","for","filteredFemaleContacts","filteredNogenderContacts","undefined","map","App","ReactDOM","render","document","getElementById"],"mappings":"iQAGMA,EAAW,CAAC,CACdC,UAAW,uCACXC,SAAU,2EACVC,MAAO,gBACPC,OAAQ,QACP,CACDH,UAAW,iCACXC,SAAU,+DACVC,MAAO,gBACPC,OAAQ,UACP,CACDH,UAAW,yDACXC,SAAU,mDACVC,MAAO,iBACN,CACDF,UAAW,iCACXC,SAAU,mDACVC,MAAO,gBACPC,OAAQ,UACP,CACDH,UAAW,uCACXC,SAAU,yDACVC,MAAO,gBACPC,OAAQ,QACP,CACDH,UAAW,uCACXC,SAAU,6CACVC,MAAO,gBACPC,OAAQ,SAqEGC,EAlEE,WAEb,MAA0BC,mBAASN,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAqCA,OACI,gCACI,uBAAOC,KAAK,OAAOC,SArCA,SAACC,GACxB,IAAMC,EAAmBZ,EAASa,QAAO,SAACC,GACxC,OAAwE,IAAjEA,EAAQb,UAAUc,cAAcC,QAAQL,EAAMM,OAAOC,SACT,IAAnDJ,EAAQb,UAAUe,QAAQL,EAAMM,OAAOC,SACyB,IAAhEJ,EAAQZ,SAASa,cAAcC,QAAQL,EAAMM,OAAOC,SACF,IAAlDJ,EAAQZ,SAASc,QAAQL,EAAMM,OAAOC,SACS,IAA/CJ,EAAQX,MAAMa,QAAQL,EAAMM,OAAOC,UAGrCV,EAASI,GACTO,QAAQC,IAAIT,EAAMM,OAAOC,QA2B4BG,YAAY,iBAAiBC,UAAU,WACxF,uBAAOb,KAAK,WAAWC,SAxBL,SAACC,GACvB,IAAMY,EAAuBvB,EAASa,QAAO,SAACC,GAC1C,MAA0B,SAAnBA,EAAQV,UAEnBI,EAASe,IAoB+CC,GAAG,SACvD,uBAAOC,IAAI,OAAX,eACA,uBAAOhB,KAAK,WAAWC,SAnBH,SAACC,GACzB,IAAMe,EAAyB1B,EAASa,QAAO,SAACC,GAC5C,MAA0B,WAAnBA,EAAQV,UAEnBI,EAASkB,IAeiDF,GAAG,WACzD,uBAAOC,IAAI,SAAX,oBACA,uBAAOhB,KAAK,WAAWC,SAdD,SAACN,GAC3B,IAAMuB,EAA2B3B,EAASa,QAAO,SAACC,GAC9C,YAAyBc,GAAlBd,EAAQV,UAEnBI,EAASmB,IAUmDH,GAAG,aAC3D,uBAAOC,IAAI,WAAX,oGAEA,oBAAIH,UAAU,eAAd,SAEQf,EAAMsB,KAAI,gBAAE5B,EAAF,EAAEA,UAAWC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,OAA9B,OACN,qBAAIkB,UAAU,cAAd,UACI,mBAAGA,UAAU,YAAb,SACI,iCAAOrB,EAAP,IAAmBC,OAEvB,mBAAGoB,UAAU,QAAb,SAAsBnB,IACtB,mBAAGmB,UAAU,SAAb,SAAuBlB,gBC7EpC0B,EAVH,WAEV,OACE,sBAAKR,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCJNS,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.375ad239.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport './Contacts.css';\n\nconst contacts = [{\n    firstName: \"Барней\",\n    lastName: \"Стинсовський\",\n    phone: \"+380956319521\",\n    gender: \"male\"\n  }, {\n    firstName: \"Робін\",\n    lastName: \"Щербатська\",\n    phone: \"+380931460123\",\n    gender: \"female\"\n  }, {\n    firstName: \"Анонімний\",\n    lastName: \"Анонімус\",\n    phone: \"+380666666666\"\n  }, {\n    firstName: \"Лілія\",\n    lastName: \"Олдровна\",\n    phone: \"+380504691254\",\n    gender: \"female\"\n  }, {\n    firstName: \"Маршен\",\n    lastName: \"Еріксонян\",\n    phone: \"+380739432123\",\n    gender: \"male\"\n  }, {\n    firstName: \"Теодор\",\n    lastName: \"Мотсбес\",\n    phone: \"+380956319521\",\n    gender: \"male\"\n  }];\n\nconst Contacts = () => {\n\n    const [items, setItems] = useState(contacts);\n\n    const handleSearchChange = (event) => {\n        const filteredContacts = contacts.filter((contact) => {\n          return contact.firstName.toLowerCase().indexOf(event.target.value) !== -1 || \n          contact.firstName.indexOf(event.target.value) !== -1 || \n          contact.lastName.toLowerCase().indexOf(event.target.value) !== -1 || \n          contact.lastName.indexOf(event.target.value) !== -1 || \n          contact.phone.indexOf(event.target.value) !== -1;\n    \n        });\n        setItems(filteredContacts);\n        console.log(event.target.value);\n    }\n\n\n    const handleMaleChecked = (event) => {\n        const filteredMaleContacts = contacts.filter((contact) => {\n            return contact.gender === \"male\";\n        });\n        setItems(filteredMaleContacts);\n    }\n\n    const handleFemaleChecked = (event) => {\n        const filteredFemaleContacts = contacts.filter((contact) => {\n            return contact.gender === \"female\";\n        });\n        setItems(filteredFemaleContacts);\n    }\n\n    const handleNogenderChecked = (gender) => {\n        const filteredNogenderContacts = contacts.filter((contact) => {\n            return contact.gender == undefined;\n        });\n        setItems(filteredNogenderContacts);\n    }\n\n    return (\n        <div>\n            <input type=\"text\" onChange={handleSearchChange} placeholder=\"Search contact\" className=\"Search\"/>\n            <input type=\"checkbox\" onChange={handleMaleChecked} id=\"male\"/>\n            <label for=\"male\">M</label>\n            <input type=\"checkbox\" onChange={handleFemaleChecked} id=\"female\"/>\n            <label for=\"female\">Ж</label>\n            <input type=\"checkbox\" onChange={handleNogenderChecked} id=\"nogender\"/>\n            <label for=\"nogender\">Стать не вказана</label>\n\n            <ul className=\"ContactsList\" >\n                {\n                    items.map(({firstName, lastName, phone, gender}) => (\n                        <li className=\"ContactItem\">\n                            <p className=\"FirstName\">\n                                <span>{firstName} {lastName}</span>\n                                </p>\n                            <p className=\"Phone\">{phone}</p>\n                            <p className=\"Gender\">{gender}</p>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport './App.css';\nimport Contacts from './components/Contacts';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <h1>My contacts</h1>\n      <Contacts></Contacts>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}